// DO NOT MODIFY THIS FILE - IT IS AUTO-GENERATED
// See also: https://go.2sxc.org/copilot-data
// To extend it, create a "PopupSettings.cs" with this contents:
/*
namespace AppCode.Data
{
  public partial class PopupSettings
  {
    // Add your own properties and methods here
  }
}
*/

// Generator:   CSharpDataModelsGenerator v17.06.02
// App/Edition: Pop-Up Message/
// User:        2sic Web-Developer
// When:        2024-04-05 09:43:19Z
using System;

namespace AppCode.Data
{
  // This is a generated class for PopupSettings 
  // To extend/modify it, see instructions above.

  /// <summary>
  /// PopupSettings data. <br/>
  /// Generated 2024-04-05 09:43:19Z. Re-generate whenever you change the ContentType. <br/>
  /// <br/>
  /// Default properties such as `.Title` or `.Id` are provided in the base class. <br/>
  /// Most properties have a simple access, such as `.Activated`. <br/>
  /// For other properties or uses, use methods such as
  /// .IsNotEmpty("FieldName"), .String("FieldName"), .Children(...), .Picture(...), .Html(...).
  /// </summary>
  public partial class PopupSettings: AutoGenerated.ZagPopupSettings
  {  }
}

namespace AppCode.Data.AutoGenerated
{
  /// <summary>
  /// Auto-Generated base class for Default.PopupSettings in separate namespace and special name to avoid accidental use.
  /// </summary>
  public abstract class ZagPopupSettings: Custom.Data.CustomItem
  {
    /// <summary>
    /// Activated as bool. <br/>
    /// To get nullable use .Get("Activated") as bool?;
    /// </summary>
    public bool Activated => _item.Bool("Activated");

    /// <summary>
    /// ActiveFrom as DateTime.
    /// </summary>
    public DateTime ActiveFrom => _item.DateTime("ActiveFrom");

    /// <summary>
    /// ActiveTo as DateTime.
    /// </summary>
    public DateTime ActiveTo => _item.DateTime("ActiveTo");

    /// <summary>
    /// ShowAgainAfter as int. <br/>
    /// To get other types use methods such as .Decimal("ShowAgainAfter")
    /// </summary>
    public int ShowAgainAfter => _item.Int("ShowAgainAfter");
  }
}